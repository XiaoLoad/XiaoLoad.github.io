<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>派大星的🍊石头屋~</title>
  
  <subtitle>这里是粉色派大星</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-11-27T15:33:44.148Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>派大星</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>派大星的日记  22/11/27 📔</title>
    <link href="http://example.com/2022/11/27/22%E5%B9%B411%E6%9C%8827%E6%97%A5/"/>
    <id>http://example.com/2022/11/27/22%E5%B9%B411%E6%9C%8827%E6%97%A5/</id>
    <published>2022-11-27T15:30:23.000Z</published>
    <updated>2022-11-27T15:33:44.148Z</updated>
    
    <content type="html"><![CDATA[<h1 id="派大星的日记-22-x2F-11-x2F-27-📔"><a href="#派大星的日记-22-x2F-11-x2F-27-📔" class="headerlink" title="派大星的日记 22&#x2F;11&#x2F;27 📔"></a>派大星的日记 22&#x2F;11&#x2F;27 📔</h1><blockquote><p>天气：今天的天气带点太阳，但是晒不到我，还是阴天吧 ⛅</p></blockquote><blockquote><p>心情：开心 🌼</p></blockquote><h3 id="日记主体："><a href="#日记主体：" class="headerlink" title="日记主体："></a>日记主体：</h3><p>今天是周日，早上七点很准时的起了床，领了早餐，是包子和烧麦还有一包牛奶(核桃味的)；吃完早餐就在床上待了会，便起床洗漱,开始新的一天，比赛结束之后，人都没这么累，不需要赶着学，跳着学；按部就班就好，今天其实没什么好记录的，主要都是在玩、中午的饭食不错，就是咸了些，有俩丸子；中午吃了饭，就睡了中午觉….睡到下午三点，就开始玩我的世界，自建农村小屋，有了光影加持，怎么建都好看，可惜我笔记本带不动更好的材质与光影。晚上呢的晚饭也很不错，今天也没干啥，把《凸变英雄 BABA》看了，一晚上刷完，其实我看了很多遍了；但主要还是拉着朋友一起看的。不过至此，让我有了新的想法，新的构思，但实现的前提必须要把前端学好，我会慢慢让我的博客更加丰富，当做我的小屋精心维护。</p><p>我想给我的博客加上一个页面，专门来放我喜欢的影视；加上一个页面，放我喜欢的歌(这个已经半实现，但我还是想要自己自定义的)；还想放一个页面用来记录世界上的神奇动物与植物，我的未来不足以让我看遍世界，但至少能记录世界（感谢互联网）！</p><p>明天是我朋友的生日，也是我能够祝福的第二个生日，想送她礼物，但条件限制，与之疫情原因，哪怕有想法也暂不能实现。</p><p>那么未来一定会实现的。</p><h3 id="今早的日出："><a href="#今早的日出：" class="headerlink" title="今早的日出："></a>今早的日出：</h3><p><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221127232821323.png" alt="image-20221127232821323"></p><p><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221127232834854.png" alt="image-20221127232834854"></p><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=100% height=86 src="https://music.163.com/outchain/player?type=2&id=1850919746&auto=1&height=66" auto="1"></iframe><blockquote><p>今日总结：今天没有花销，玩了会。</p><p>明日期望：祝朋友明天开心！</p></blockquote><p style="float: right">2022年11月27日23:33:31</p><br>]]></content>
    
    
    <summary type="html">这是我的第 6 篇日记</summary>
    
    
    
    <category term="派大星的日记" scheme="http://example.com/categories/%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="派大星的日记" scheme="http://example.com/tags/%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>派大星的日记  22/11/26 📔</title>
    <link href="http://example.com/2022/11/26/22%E5%B9%B411%E6%9C%8826%E6%97%A5/"/>
    <id>http://example.com/2022/11/26/22%E5%B9%B411%E6%9C%8826%E6%97%A5/</id>
    <published>2022-11-26T15:34:17.000Z</published>
    <updated>2022-11-27T15:27:44.112Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，您输入的密码错误，请检查后重新输入。" data-whm="抱歉, 当前文章不能被校验, 不过您还是可以看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="f4212cca95334936010093e5fe4e03ef8932c050907ec5721405201f7af0e19c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">当前文章不可看哦，文章加密测试(密码：123456)</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这是我的第 5 篇日记</summary>
    
    
    
    <category term="派大星的日记" scheme="http://example.com/categories/%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="派大星的日记" scheme="http://example.com/tags/%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>派大星的日记  22/11/25 📘</title>
    <link href="http://example.com/2022/11/25/22%E5%B9%B411%E6%9C%8825%E6%97%A5/"/>
    <id>http://example.com/2022/11/25/22%E5%B9%B411%E6%9C%8825%E6%97%A5/</id>
    <published>2022-11-25T15:44:00.000Z</published>
    <updated>2022-11-26T16:21:49.132Z</updated>
    
    <content type="html"><![CDATA[<h1 id="派大星的日记-22-x2F-11-x2F-25📘"><a href="#派大星的日记-22-x2F-11-x2F-25📘" class="headerlink" title="派大星的日记  22&#x2F;11&#x2F;25📘"></a>派大星的日记  22&#x2F;11&#x2F;25📘</h1><blockquote><p>天气：不知道哎，天气预报有说下雨，但我没感觉到，那就阴天吧⛅</p></blockquote><blockquote><p>心情：小开心吧🙃</p></blockquote><style>.main {    text-indent: 2rem;}.dis {    display: inline-block !important;    margin: 0px;    padding-top: 10px;    vertical-align: -30px;    }    .w{        font-size: 8px;        text-align:center;        margin: 0px  !important;    }    .light {        background-color: yellow;    }</style><p class="main">今天是25号，明天就要去比赛了，我有点害怕明天起不来，今早上很好，7点多就起床并且领了早餐，早餐是一杯豆浆和油条加上沙糕，刚领了早餐，楼下老师就在群里说不能喝豆浆，让我们把豆浆拿下去换牛奶，换了牛奶，早餐也吃完啦、就开始上早八。</p><p class="main">星期五的课总是枯燥无味，匆忙逝去的时间，把我带到了中午，中午的饭很不错，这次就不放图啦，吃完了中午饭后我就开始忙绿于给我的博客添砖加瓦，花了一下午时间把博客的评论弄出来了以及部分美化，当数据开始增多，我的博客加载速度也开始变慢，把我的博客弄了后呢，写了会作业，就吃饭啦，晚饭也还行，这次还是不放图了</p><p class="main">晚上，上大学了感觉时间不够用，完全不够用，我研究点东西，一研究时间就哗啦呼啦的流逝，不够用啊！忙完之后嘞，辅导员让我明天比完赛，帮同学带点东西，我答应了，说实话我以为是为我明天比赛准备的零食，哎、看来只好明天早上吃泡面滋养我四小时了，比赛四小时，费脑又费力，不知道能不能坚持下去，我都怕我饿晕了~</p><p>今天没什么大事发生，小事也太小不值得记录，于是乎今天就到此结束！</p><h3 id="！！！评论开放啦，评论不需要登录账号，快来评论吧"><a href="#！！！评论开放啦，评论不需要登录账号，快来评论吧" class="headerlink" title="！！！评论开放啦，评论不需要登录账号，快来评论吧"></a><strong>！！！评论开放啦，评论不需要登录账号，快来评论吧</strong></h3><blockquote><p>今日总结：今天没有任何花销，也没啥大的收获</p><p>明日期望：还是希望疫情好转~   </p></blockquote><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/234.gif" style="zoom: 25%;" /><p style="float: right">2022年11月25日23:17:41</p><br>]]></content>
    
    
    <summary type="html">这是我的第 4 篇日记</summary>
    
    
    
    <category term="派大星的日记" scheme="http://example.com/categories/%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="派大星的日记" scheme="http://example.com/tags/%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>派大星的日记  22/11/24 📘</title>
    <link href="http://example.com/2022/11/24/22%E5%B9%B411%E6%9C%8824%E6%97%A5/"/>
    <id>http://example.com/2022/11/24/22%E5%B9%B411%E6%9C%8824%E6%97%A5/</id>
    <published>2022-11-24T15:00:00.000Z</published>
    <updated>2022-11-26T15:22:37.400Z</updated>
    
    <content type="html"><![CDATA[<h1 id="派大星的日记-22-x2F-11-x2F-24📘"><a href="#派大星的日记-22-x2F-11-x2F-24📘" class="headerlink" title="派大星的日记  22&#x2F;11&#x2F;24📘"></a>派大星的日记  22&#x2F;11&#x2F;24📘</h1><blockquote><p>天气：不知道哎，天气预报有说下雨，但我没感觉到，那就阴天吧⛅</p></blockquote><blockquote><p>心情：小开心吧🙃</p></blockquote><style>.main {    text-indent: 2rem;}.dis {    display: inline-block !important;    margin: 0px;    padding-top: 10px;    vertical-align: -30px;    }    .w{        font-size: 8px;        text-align:center;        margin: 0px  !important;    }    .light {        background-color: yellow;    }</style><p class="main">今天早上没有早八，我很如愿的错过了拿早餐的时间，身为室长的我为此感到些许愧疚<img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221124214659829.png" alt="image-20221124214659829" style="zoom:45%;" class="dis" />，没能让他们吃上早饭，这是我下铺的错，他没有把我叫醒，哎、早上十点多起床，很健康；今天还是如同昨日，被封在宿舍不能出去，宿舍缺水已经有一段时间了，已经开始喝烧开的自来水了，味道还行。时间过得很快，在我洗漱之后，就到了11点了，可以下去领饭了，今天中午的饭食很好<img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221124221657301-1669299455640-1.png" alt="饭食" style="zoom:30%;" /><p class="w">    六个人的饭</p><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221124222054244.png" alt="六个人的饭！" style="zoom:33%;" /></p><p class="main">吃了中午饭之后，辅导员找到我，问我要不要去办公室调试调试比赛环境，woc，这我肯定答应啊，于是乎我待到 14 点做完核酸，就跑下去问了问能不能出去，防疫工作的老师很惊讶，表示他自己也拿不稳，暂时让我先等着，去联系书记，待书记指示后，我再去；就这样坎坎坷坷的，我出了寝室楼，去到了外面<img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221124223039509.png" alt="安静的学校" style="zoom:47%;" /></p><p>    学校很安静安静，各个寝室楼都在组织做核酸；走了一会儿，就到了办公楼，去到了我的小房间，当我掏出钥匙开门时，里面居然传出了声音，我丢！！！里面居然有人，这是我当时的想法，震惊了！开了门，里面是老师，但不认识，他问我干什么的，我回答了他，他表示很遗憾，这房间被征用为老师的房间了，用作于休息睡觉；就这样我被赶去了辅导员办公室，没事，将就用吧，希望周六的比赛能顺利吧。在办公室待了很久，开了个赛前说明会之后，我以办公室的环境思考了我需要带的东西，我就离开了、在回去的路上，顺道去了趟超市，为解决寝室无水的情况，我买了四瓶 1L 的农夫山泉，花了 <span class="light">14</span> 元，我很顺利的回到寝室，拉拉扯扯，时间就到了晚上，拉了室友拿着我的证件去楼下领饭，回来的时候得知，寝室楼下可以开放桶装水购买了，烦！我才刚买的水，哎，生活总是能给我带来惊喜，早知道买吃的了....</p><p class="main">    晚上很无趣，背背单词，看看书，时间就这样过去了；按照跑步规定今天是可以跑步的，体育的期末考核有要求我们跑满 20 次三公里，奈何我偷懒，只跑了十几次，差了几次，如今而见，是不能跑了，不知道啥时候能解封，不然我体育考核可能过不了啊☹️，我妈没找我，我爹也没找我，但我舅舅找我了，让我好好戴口罩，注意安全，重庆的疫情越发严重了，我家那边都已经开始静默管理了。。。时间差不多了，日记也写到这里结束了，我得洗漱睡觉啦~</p><h4 id="这里是办公室："><a href="#这里是办公室：" class="headerlink" title="这里是办公室："></a>这里是办公室：</h4><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221124230125450.png" alt="这里是办公室" style="zoom:50%;" /><h4 id="这是电脑摄像头下我的衣服："><a href="#这是电脑摄像头下我的衣服：" class="headerlink" title="这是电脑摄像头下我的衣服："></a>这是电脑摄像头下我的衣服：</h4><p><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/Snipaste_2022-11-24_16-05-03.png"></p><blockquote><p>今日总结：今天花销 <strong>14</strong> 元，把 Java  的封装又多看了几次，复习了 Javascript 出去溜了一会儿</p><p>明日期望：还是希望疫情好转~   </p></blockquote><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/pdx.gif" style="zoom: 25%;" /><p style="float: right">2022年11月24日23:15:45</p><br>]]></content>
    
    
    <summary type="html">这是我的第 3 篇日记</summary>
    
    
    
    <category term="派大星的日记" scheme="http://example.com/categories/%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="派大星的日记" scheme="http://example.com/tags/%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>派大星的日记  22/11/23 📘</title>
    <link href="http://example.com/2022/11/23/22%E5%B9%B411%E6%9C%8823%E6%97%A5/"/>
    <id>http://example.com/2022/11/23/22%E5%B9%B411%E6%9C%8823%E6%97%A5/</id>
    <published>2022-11-23T15:34:17.000Z</published>
    <updated>2022-11-26T15:22:26.872Z</updated>
    
    <content type="html"><![CDATA[<h1 id="派大星的日记-22-x2F-11-x2F-23-📘"><a href="#派大星的日记-22-x2F-11-x2F-23-📘" class="headerlink" title="派大星的日记  22&#x2F;11&#x2F;23 📘"></a>派大星的日记  22&#x2F;11&#x2F;23 📘</h1><blockquote><p>天气：小雨且冷</p></blockquote><blockquote><p>心情：一半的开心🙃</p></blockquote><style>.main {    padding: 0;    text-indent: 2rem;}.main li {    margin: 1.5em 0 !important;    line-height: 2em;    font-family: '微软雅黑';    list-style-type: none !important;}</style><ul class="main">            <li>emm...怎么讲呢，今天并不是美好的一天，从今天早上七点多起床，准备去吃属于今天的早餐，结果不能出寝室！为什么呢，我也不知道，但大概能猜出来是因为某学生健康码有问题吧，我还是不大觉得，一直属于封校状态的我们会染上阳；学校很慌，马不停蹄的就把我们封印在寝室里，毕竟昨天我还能不戴口罩跑步呢~ 很遗憾，寝室没有什么物资了，连饮用水都没有，于是乎一个早上我很饿，边饿边上课，顺带把我学校封寝室这件事奔走相告~ 很不开心，饿了一阵子，学校才堪堪把餐送到。于是呢我在寝室里上了早八，上了课，写了会Java作业（这个作业我写了一早上）。</li>            <li>中午其实也没吃到什么，就隔离餐吧，其实还好，也就是两荤一素的盒饭，草草解决了中午之忧，便在床上睡了会午觉，下午就开始了新的课程，在下午空余时间，我在学校公众号上得知了，封寝的原因——诞生了小阳人我老惊讶了，在两天一检的且封校的情况下，为何还会染上嘞，这让我感叹病毒的强大，也让我有些担忧，毕竟昨晚上我可是没戴口罩跑了步的！！！可想而知，风险还是很大的。</li><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/11231.jpg" alt="11231" style="zoom: 25%;" />            <li>我于是乎又把这一消息奔走相告（早上还在和朋友分析得阳了要封个把月，没想到下午就实现了，乌鸦嘴属性）、唉唉唉，我的比赛，我的年，咋比啊？咋跨啊？想想我比赛，困难重重啊，先是重庆疫情严重，导致变成线上赛，好不容易比赛环境搭建好，又被告知周六早上选修课考试，时间上撞了个大满贯；然后嘞，学校又来了小阳人，真是有够阻扰的、其实到目前为止，对这比赛，我已经开始摆烂了，毕竟四小时时间，还要不吃不喝，真的很难熬。</li>    <li>今天事情很多，几段话还说不完，下午一直拖到了六点之后做了核酸之后才吃上饭</li>    <img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/22-11-23.jpg" style="zoom:50%;" />    <li>很饿很饿，还带点渴，下午的饭也还好，符合我的胃口，就是没吃饱，到了晚上还得饿。寝室一直没有饮用水，向群里老师问了，结果没回复。时间就慢慢的到了晚上了，晚上我刷了会比赛的题，和老妈聊天，老妈让我多照顾自己，戴口罩，勤洗手，我一直都有在答应，可重庆的疫情原因老妈还总是不放心，我没把学校有阳性这件事告诉妈妈，怕她更担心，所以聊了聊就跑去记了记单词，打了会 csgo，结果上瘾了，愣是打了半小时，让我日记都没写， csgo误我，，，于是乎等我写完这篇日记呢，已经是12点14分了，那就只好明天上传咯，洗洗睡觉咯</li></ul><blockquote><p>今日总结：并没有记到新单词，在复习过往的单词；今天一分钱没花唉！盒饭免费！</p><p>明日期望：希望疫情好转~   </p></blockquote><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/20221124121912.gif"  /><p style="float: right">2022年11月24日00:23:23</p><br>]]></content>
    
    
    <summary type="html">这是我的第二篇日记</summary>
    
    
    
    <category term="派大星的日记" scheme="http://example.com/categories/%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="派大星的日记" scheme="http://example.com/tags/%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>派大星的日记  22/11/22 📘</title>
    <link href="http://example.com/2022/11/22/22%E5%B9%B411%E6%9C%8822%E6%97%A5/"/>
    <id>http://example.com/2022/11/22/22%E5%B9%B411%E6%9C%8822%E6%97%A5/</id>
    <published>2022-11-22T14:34:17.000Z</published>
    <updated>2022-11-26T15:16:45.712Z</updated>
    
    <content type="html"><![CDATA[<h1 id="派大星的日记-22-x2F-11-x2F-22-📘"><a href="#派大星的日记-22-x2F-11-x2F-22-📘" class="headerlink" title="派大星的日记  22&#x2F;11&#x2F;22 📘"></a>派大星的日记  22&#x2F;11&#x2F;22 📘</h1><blockquote><p>天气：多云且小冷</p></blockquote><blockquote><p>心情：一半一半的开心🙃</p></blockquote><p style="text-indent: 2em">今天是一个快乐一天，我很开心的赶上了今天早八，虽说是在寝室上网课，不知道为什么自从上网课以来，就很少吃早饭了....可能是，大概是太懒了</p>        <p style="text-indent: 2em">今天呢是22号，自大学以来，总感觉时间过得特别快，转眼就已经快12月份了，也许是我目前比高中忙了吧，一天天的忙这忙那的，时间就天天的过~</p>        <p style="text-indent: 2em;">今天中午，吃了二食堂的二荤两素，要了我<span                style="background-color: yellow; color: #000">12</span>块钱，老贵了，贵的我不得不把价格加个高亮显示。</p>        <p style="text-indent: 2em;">            今天下午，事情就很多了，要去搭建比赛环境，为此辅导员还专门给我提供了豪华单间，内有空调与沙发，羡煞旁人；于是呢我很期待的跑去了办公楼准备待上一下午，结果嘞办公室里并没有老师在，可惜可惜，我只好等到下午两点半再去~~        </p>        <p style="text-indent: 2em;">            也许有人要问，为什么要分段分段的写，我也不知道哇，我只想写的好看些，写的漂亮些，这是我第一次写日记，难免有不知道咋写的情况，悲催！！！！活了十八年，连个日记都不会写，我真是白痴！愧对自己</p>        <p style="text-indent: 2em;">讲道理，和辅导员交流还是让我很害怕的，毕竟看知乎总是看到得罪了辅导员会咋咋咋什么的，总是担心，哎！大学生了还没学会面对这些，继续继续，下午其实有课的，网络基础            我是没想到我学了四年的网络基础了到了大学还要继续学，不过这大学的网络基础有些新东西，还好还好，总的来说还是不错的，下午上到一半的课，看了看表，14点30分，太好了，我决定还是把时间往后延延，毕竟要去那边呆很久，还是不太舍得寝室。。        </p>        <p style="text-indent: 2em;">            经历了一顿挫折后呢，我成功的打开了豪华单间的门，很不错，真的有空调，真的有沙发，真的有两台电脑，看了看了电脑配置，太棒了居然还是i3处理器，这种处理器，真不愧是老学校，我都好久没见过i3的处理器了，居然能在这看到~~~环境还是不错的，起码是一个人，一个人就很舒服，检查了设备环境之后呢，就开始下载比赛需要的程序和完善比赛环境，环境呢，要求的不严苛，需要个摄像头，需要两台电脑，需要良好的网络环境；很遗憾，我没有摄像头，只好使用手机，不过这就需要支架了，于是聪明的我，寻求了辅导员帮助，借来了个手机支架，真不错，环境算是配置好了，就差软件了；电脑在我一番检查之后发现，这电脑居然没有扬声器😑等我发现时候，我已经把需要的软件都下载完了，结果才发现这电脑居然没有扬声器。。把我整傻了，浪费了一小时，结果白白了、、一下午啥也不是，还被那小房间给闷的不舒服、如此只好打道回府，回宿舍咯        </p>        <p style="text-indent: 2em;">            在回去路上，我惊喜的发现今天好像是跑步的时间，又可以运用我的运动细胞去跑步了，好耶！于是乎我就回到寝室学习了一小片刻的Js，很不错学会了一丢丢；时间呢，慢慢的就到了夜晚，六点啦，六点半啦，跑步去了，匆匆跑了三公里，跑去一食堂买了碗价值            <span style="background-color: yellow; color: #000">8</span>元的鸡杂小面，很不错，味道还行            <img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221122234958694.png" alt="鸡杂面" style="zoom: 20%; " /></p><p style="text-indent: 2em;">去超市买了<span style="background-color: yellow; color: #000">13</span>块钱的东西，一瓶脉动，一包口水娃、时间慢慢的流逝，在晚上的时间里，我和老妈交流了重庆疫情的发展，和朋友交流了重庆疫情的槽点，学习了css和js，背了会单词，又学会了些新东西；于是乎时间就匆匆的来到了现在，洗了个澡，就开始写日记，日记呢，花了半小时左右写完吧，也差不多一个小时了，写完发布就睡觉吧···第一次写日记，格式总是杂七杂八的，还望海涵。那么明天见~        </p><blockquote><p>今日总结：学了新东西，加强了社交，花了<strong>33</strong>元钱</p><p>明日期望：希望能多学新东西，过得开心</p></blockquote><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/QQ图片20221122235632.gif" style="zoom:25%;" /><p style="float: right">2022年11月22日23:35:14</p><br>]]></content>
    
    
    <summary type="html">这是我的第一篇日记</summary>
    
    
    
    <category term="派大星的日记" scheme="http://example.com/categories/%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="派大星的日记" scheme="http://example.com/tags/%E6%B4%BE%E5%A4%A7%E6%98%9F%E7%9A%84%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>JavaScript学习笔记</title>
    <link href="http://example.com/2022/11/21/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://example.com/2022/11/21/JavaScript%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2022-11-21T14:33:38.000Z</published>
    <updated>2022-11-25T08:31:16.619Z</updated>
    
    <content type="html"><![CDATA[<h1 id="JavaScript学习"><a href="#JavaScript学习" class="headerlink" title="JavaScript学习"></a>JavaScript学习</h1><h2 id="1-声明变量"><a href="#1-声明变量" class="headerlink" title="1.声明变量"></a>1.声明变量</h2><h5 id="1-1-变量的声明"><a href="#1-1-变量的声明" class="headerlink" title="1.1 变量的声明"></a>1.1 变量的声明</h5><ol><li><strong>var</strong> 声明变量 <code>var name = &#39;德华&#39;</code></li><li><strong>console.log();</strong> 后台日志 <code>console.log(sss);</code></li><li>变量的命名规范<ul><li>由字母，数字，下划线，美元符号组成</li><li>区分大小写</li><li>不能以数字开头</li><li>不能是关键字，保留字</li><li>使用严格检查模式 <code>use strict</code> 预防JavaScript随意性导致出现问题 写在第一行</li><li>局部变量推荐使用<code>let</code>定义</li></ul></li></ol><h5 id="1-2-声明变量的案例"><a href="#1-2-声明变量的案例" class="headerlink" title="1.2 声明变量的案例"></a>1.2 声明变量的案例</h5><ol><li><p>案例1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> myname = <span class="title function_">proment</span>(<span class="string">&#x27;请输入你的名字&#x27;</span>);<span class="comment">//定义并存输入</span></span><br><span class="line"><span class="title function_">alert</span>(myname);<span class="comment">//输出</span></span><br></pre></td></tr></table></figure></li><li><p>声明多个变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//声明多个变量</span></span><br><span class="line"><span class="keyword">var</span> age = <span class="number">18</span>,</span><br><span class="line">    name = <span class="string">&#x27;德华&#x27;</span>,</span><br><span class="line">    ge = <span class="number">2000</span>;</span><br><span class="line"><span class="comment">//若只声明不赋值结果是undefined 解释器也不知道里面存放的是什么</span></span><br><span class="line"><span class="keyword">var</span> sex;</span><br><span class="line"><span class="comment">//不声明,不赋值直接使用报错</span></span><br><span class="line"><span class="comment">//不声明直接使用赋值使用不会报错</span></span><br><span class="line">q = <span class="number">100</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(q);</span><br></pre></td></tr></table></figure></li></ol><h2 id="2-数据类型"><a href="#2-数据类型" class="headerlink" title="2.数据类型"></a>2.数据类型</h2><ul><li>Javascript 是支持变量的数据类型动态化</li></ul><h5 id="1-1-数字类型"><a href="#1-1-数字类型" class="headerlink" title="1.1 数字类型"></a>1.1 数字类型</h5><ol><li><code>var sum = 10;//数字型可包含整数和小数</code></li><li><code>var str = &#39;love&#39;;//字符串型</code></li><li><strong>prompt</strong> 取得的值为字符型</li></ol><h5 id="1-2-字符串类型-String"><a href="#1-2-字符串类型-String" class="headerlink" title="1.2 字符串类型 String"></a>1.2 字符串类型 String</h5><ol><li><p>Javascript可以用单引号嵌套双引号，或者双引号嵌套单引号</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> strMsg = <span class="string">&#x27;我是&quot;高富帅&quot;程序员&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> strMsg2 = <span class="string">&quot;我是&#x27;高富帅&#x27;程序员&quot;</span>;</span><br></pre></td></tr></table></figure></li><li><p>字符串转义字符</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str1 = <span class="string">&quot;一二三四\n大大&quot;</span></span><br></pre></td></tr></table></figure></li><li><p>检查获取字符串的长度 length</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;my name is link&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="property">length</span>);<span class="comment">//15</span></span><br></pre></td></tr></table></figure></li><li><p>多行字符串编写</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = </span><br><span class="line">    <span class="string">`hello</span></span><br><span class="line"><span class="string">    world</span></span><br><span class="line"><span class="string">    你好</span></span><br><span class="line"><span class="string">    您好ya`</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br></pre></td></tr></table></figure><p>输出结果：</p><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221118173304809.png" alt="image-20221118173304809" style="zoom:67%;" /></li><li><p>模板字符串(ES6新特性)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&#x27;朋友&#x27;</span>;</span><br><span class="line"><span class="keyword">let</span> age = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> msg = <span class="string">&#x27;您好呀,&amp;&#123;name&#125;&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(msg);</span><br></pre></td></tr></table></figure></li><li><p>大小写转换 <strong>toUpperCase()</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&#x27;love&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name.<span class="title function_">toUpperCase</span>());</span><br><span class="line"><span class="comment">//&gt; LOVE</span></span><br></pre></td></tr></table></figure><p>输出结果:</p><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221118174418949.png" alt="image-20221118174418949" style="zoom:67%;" /></li><li><p>获取指定下标位置 <strong>indexOf();</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;I Love You&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">indexOf</span>(<span class="string">&#x27;Y&#x27;</span>));</span><br><span class="line"><span class="comment">//&gt; 7</span></span><br></pre></td></tr></table></figure></li><li><p>截取字符串 <strong>substring();</strong></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;student&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">substring</span>(<span class="number">1</span>));</span><br><span class="line"><span class="comment">//&gt; udent</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str.<span class="title function_">substring</span>(<span class="number">1</span>,<span class="number">2</span>));</span><br><span class="line"><span class="comment">//&gt; t</span></span><br></pre></td></tr></table></figure></li><li><p>字符串的拼接</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Love&#x27;</span> + <span class="string">&#x27;of&#x27;</span> + <span class="string">&#x27;my&#x27;</span> + <span class="string">&#x27;life.&#x27;</span>);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;age&#x27;</span> + <span class="number">18</span>);</span><br><span class="line"><span class="keyword">var</span> age = <span class="number">20</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;我今年&#x27;</span> + age + <span class="string">&#x27;岁&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>Undefined || Null</p></li></ol>   <figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//一个声明后没有被赋值的变量会有一个默认值undefined(如果进行相连或者相加时，注意结果)</span></span><br><span class="line"><span class="keyword">var</span> variable = <span class="literal">undefined</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(variable + <span class="string">&#x27;pink&#x27;</span>);<span class="comment">//undefinedpink</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(variable + <span class="number">1</span>);<span class="comment">//NaN</span></span><br><span class="line"><span class="comment">//一个声明变量给null值，里面存的值为空</span></span><br><span class="line"><span class="keyword">var</span> space = <span class="literal">null</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(space + <span class="string">&#x27;pink&#x27;</span>);<span class="comment">//nullpink</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(space + <span class="number">1</span>);<span class="comment">//1</span></span><br></pre></td></tr></table></figure><ol start="11"><li><p>进制 || 最值 || NaN || infinity || isNaN()</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num1 = <span class="number">010</span>;<span class="comment">//表示八进制</span></span><br><span class="line"><span class="keyword">var</span> num2 = <span class="number">0x9</span>;<span class="comment">//表示十六进制</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="property">MAX_VALUE</span>);<span class="comment">//获取数字类型的最大值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="property">MIN_VALUE</span>);<span class="comment">//获取数字类型的最小值</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>.<span class="property">MAX_VALUE</span> * <span class="number">2</span>);<span class="comment">//infinity 输出无穷大</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>( - <span class="title class_">Number</span>.<span class="property">MAX_VALUE</span> * <span class="number">2</span>);<span class="comment">//-infinity 输出无穷小</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;pink&#x27;</span> - <span class="number">2</span>);<span class="comment">//NaN 输出非数字</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">isNaN</span>(<span class="number">12</span>));<span class="comment">//isNaN();来判断是否为非数字的类型</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="1-2-获取数据类型-typeof"><a href="#1-2-获取数据类型-typeof" class="headerlink" title="1.2 获取数据类型 typeof"></a>1.2 获取数据类型 typeof</h5><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;pink&#x27;</span>;</span><br><span class="line"><span class="keyword">var</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">var</span> timer = <span class="literal">null</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> num);<span class="comment">//number;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> str);<span class="comment">//string;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> flag);<span class="comment">//boolean;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> timer);<span class="comment">//object;</span></span><br></pre></td></tr></table></figure><h5 id="1-3-数据类型的转换"><a href="#1-3-数据类型的转换" class="headerlink" title="1.3 数据类型的转换"></a>1.3 数据类型的转换</h5><ol><li><p>使用表单，prompt获取过来的数据默认是字符串类型的，此时就不能直接简单的进行加法运算，而需要转换变量的数据类型。通俗来讲就是把一种数据类型的变量转换成另外一种数据类型。</p><ul><li>转换为字符串类型</li><li>转换为数字类型</li><li>转换为布尔型</li></ul></li><li><p>转换字符串</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.把数字转换为字符串型 变量.toString();</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">var</span> str = num.<span class="title function_">toString</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(str);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="keyword">typeof</span> str);</span><br><span class="line"><span class="comment">//2.利用String(变量)转换</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">String</span>(num));</span><br><span class="line"><span class="comment">//3.利用 + 拼接字符串的方法实现转换效果 这种也称隐式转换</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num + <span class="string">&#x27;&#x27;</span>);</span><br></pre></td></tr></table></figure></li><li><p>转换数字类型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1.利用parseInt();</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(<span class="string">&#x27;3.15&#x27;</span>));<span class="comment">//取整 3</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(<span class="string">&#x27;120px&#x27;</span>));<span class="comment">//120 会去掉px单位</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseInt</span>(<span class="string">&#x27;rem120px&#x27;</span>));<span class="comment">//NaN</span></span><br><span class="line"><span class="comment">//2.利用parseFloat(); 转换成浮点数</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="built_in">parseFloat</span>(<span class="string">&#x27;3.14&#x27;</span>));<span class="comment">//可保留小数</span></span><br><span class="line"><span class="comment">//3.利用Number();</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Number</span>(str));</span><br><span class="line"><span class="comment">//4.利用算术运算 - * \</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;12&#x27;</span> - <span class="number">0</span>);<span class="comment">//结果为数字型12</span></span><br></pre></td></tr></table></figure></li><li><p>转换布尔型</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Boolean();</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="string">&#x27;&#x27;</span>));<span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="number">0</span>));<span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="title class_">NaN</span>));<span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="literal">null</span>));<span class="comment">//false</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title class_">Boolean</span>(<span class="literal">undefined</span>));<span class="comment">//false</span></span><br><span class="line"><span class="comment">//除了以上其他基本为true</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="3-逻辑运算符-短路运算-逻辑中断"><a href="#3-逻辑运算符-短路运算-逻辑中断" class="headerlink" title="3.逻辑运算符-短路运算(逻辑中断)"></a>3.逻辑运算符-短路运算(逻辑中断)</h2><ul><li>用布尔值参与逻辑运算 <code>true &amp;&amp; false == false</code></li><li><code>123 &amp;7 456</code>是值 或者是 表达式 参与逻辑运算?</li><li>如果有空或者否定的为假 其余都为真 <code>&#39; &#39; null undefined NaN</code></li><li>逻辑中段很重要，会影响程序的运行结果</li></ul><ol><li><p>短路与运算 如果表达式1为真则返回表达式2，如果表达式1为假则返回表达式1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">123</span> &amp;&amp; <span class="number">456</span>);<span class="comment">//456</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">0</span> &amp;&amp; <span class="number">1</span> + <span class="number">2</span> &amp;&amp; <span class="number">456</span> * <span class="number">56789</span>); <span class="comment">//表达式1 为假，则后续表达式不执行</span></span><br></pre></td></tr></table></figure></li><li><p>短路或运算 如果表达式1 结果为真 则返回的是表达式1 如果表达式1为假 则返回表达式2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">123</span> || <span class="number">456</span>); <span class="comment">//123</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">0</span> || <span class="number">456</span>); <span class="comment">//456</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">123</span> || <span class="number">456</span> || <span class="number">789</span>); <span class="comment">//123</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">123</span> || num++);<span class="comment">//123</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">//0</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="1-4-数据类型案例"><a href="#1-4-数据类型案例" class="headerlink" title="1.4 数据类型案例"></a>1.4 数据类型案例</h5><ol><li><p>计算年龄案例</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//计算年龄案例  要求输入出生年份计算出年龄</span></span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line"><span class="keyword">var</span> year = <span class="title function_">prompt</span>(<span class="string">&#x27;请输入您的出生年份:&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> nowYear = <span class="title function_">prompt</span>(<span class="string">&#x27;请输入今年的年份:&#x27;</span>);</span><br><span class="line"><span class="comment">//判断输入的出生年份是否小于今年年份</span></span><br><span class="line"><span class="keyword">if</span> (year &lt;= nowYear) &#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;您今年&#x27;</span> + (nowYear - year) + <span class="string">&#x27;岁了&#x27;</span>);</span><br><span class="line"><span class="title function_">alert</span>(<span class="keyword">typeof</span> year + <span class="string">&#x27;\n&#x27;</span> + <span class="keyword">typeof</span> nowYear);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;数据有误！请重新输入&#x27;</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="4-分支选择结构-Switch"><a href="#4-分支选择结构-Switch" class="headerlink" title="4.分支选择结构 - Switch"></a>4.分支选择结构 - Switch</h2><ol><li><code>Switch(num)</code>num是全等的需要数据类型相匹配</li></ol><h2 id="5-数组"><a href="#5-数组" class="headerlink" title="5.数组"></a>5.数组</h2><h5 id="5-1-数组的创建"><a href="#5-1-数组的创建" class="headerlink" title="5.1 数组的创建"></a>5.1 数组的创建</h5><ol><li><p>利用 <em><strong>new</strong></em> 创建</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 数组名 = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>(); <span class="comment">//创建一个空的数组</span></span><br></pre></td></tr></table></figure></li><li><p>利用数组字面量创建</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 数组名 = [];</span><br><span class="line"><span class="keyword">var</span> array = [<span class="string">&#x27;小白&#x27;</span>,<span class="string">&#x27;大黄&#x27;</span>,<span class="number">19</span>,<span class="string">&#x27;llll&#x27;</span>,<span class="literal">true</span>];</span><br><span class="line"><span class="comment">//数组的字面量的是方括号[]</span></span><br><span class="line"><span class="comment">//声明数组并赋值称为数组的初始化</span></span><br><span class="line"><span class="comment">//这种字面量方式也是常用的</span></span><br><span class="line"><span class="comment">//可以存放不同数据类型的元素 可以是字符串，数字，布尔值等</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="5-2-获取和遍历数组的元素"><a href="#5-2-获取和遍历数组的元素" class="headerlink" title="5.2 获取和遍历数组的元素"></a>5.2 获取和遍历数组的元素</h5><ol><li><p>索引下标获取</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [<span class="string">&#x27;小白&#x27;</span>,<span class="string">&#x27;大黄&#x27;</span>,<span class="number">19</span>,<span class="string">&#x27;llll&#x27;</span>,<span class="literal">true</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1);<span class="comment">//返回全部元素</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr1[<span class="number">0</span>]);<span class="comment">//返回小白</span></span><br></pre></td></tr></table></figure></li><li><p>遍历数组元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [<span class="string">&#x27;小白&#x27;</span>,<span class="string">&#x27;大黄&#x27;</span>,<span class="number">19</span>,<span class="string">&#x27;llll&#x27;</span>,<span class="literal">true</span>];</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; array.<span class="property">length</span>; i++)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(array[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h5 id="5-4-数组中新增元素"><a href="#5-4-数组中新增元素" class="headerlink" title="5.4 数组中新增元素"></a>5.4 数组中新增元素</h5><ol><li><p>通过修改 <em><strong>length</strong></em> 长度</p><blockquote><p>注意：给 length 赋值，数组大小会发生变化，如果赋值长度过小，则数组元素丢失</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> array = [<span class="string">&#x27;小白&#x27;</span>,<span class="string">&#x27;大黄&#x27;</span>];<span class="comment">//当前数组元素为2</span></span><br><span class="line">array.<span class="property">length</span> = <span class="number">5</span>;<span class="comment">//把数组长度修改到5,但新增元素没有值</span></span><br></pre></td></tr></table></figure></li><li><p>通过修改索引号来新增元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = [<span class="number">11</span>,<span class="number">22</span>,<span class="number">33</span>];</span><br><span class="line">arr[<span class="number">3</span>] = <span class="string">&#x27;lv&#x27;</span>;</span><br><span class="line"><span class="comment">//此时追加了元素3,如果元素已有则覆盖替换</span></span><br><span class="line">arr = <span class="number">12</span>;</span><br><span class="line"><span class="comment">//不要给数组名赋值 否则清除数组所有元素</span></span><br></pre></td></tr></table></figure></li></ol><h5 id="5-5-数组案例"><a href="#5-5-数组案例" class="headerlink" title="5.5 数组案例"></a>5.5 数组案例</h5><ol><li><p>数组筛选</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将数组中的大于10的数组选出来，并放入新数组中</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">71</span>, <span class="number">24</span>, <span class="number">1</span>, -<span class="number">2</span>, <span class="number">23</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = [];</span><br><span class="line"><span class="keyword">var</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[i] &gt; <span class="number">10</span>) &#123;</span><br><span class="line">newArr[count] = arr[i]; </span><br><span class="line">count++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; newArr.<span class="property">length</span>; i++)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>筛选方法2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//将数组中的大于10的数组选出来，并放入新数组中</span></span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">71</span>, <span class="number">24</span>, <span class="number">1</span>, -<span class="number">2</span>, <span class="number">23</span>];</span><br><span class="line"><span class="keyword">var</span> newArr = [];</span><br><span class="line"><span class="comment">//刚开始的newArr的length长度为0</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[i] &gt; <span class="number">10</span>) &#123;</span><br><span class="line">newArr[newArr.<span class="property">length</span>] = arr[i]; <span class="comment">//新增后长度+1</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; newArr.<span class="property">length</span>; i++)&#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr[i]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>数组翻转</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>];</span><br><span class="line"><span class="keyword">let</span> newArr = [];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = arr.<span class="property">length</span> - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i++)&#123;</span><br><span class="line">    newArr[newArr.<span class="property">length</span>] = arr[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(newArr);</span><br></pre></td></tr></table></figure></li><li><p>冒泡排序</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> array = [<span class="number">5</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; array.<span class="property">length</span> - <span class="number">1</span>; i++)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> j = <span class="number">0</span>; j &lt; array.<span class="property">length</span> - i - <span class="number">1</span>; j++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(array[j] &gt; array[j + <span class="number">1</span>])&#123;</span><br><span class="line">            <span class="keyword">let</span> temp;</span><br><span class="line">            temp = array[j + <span class="number">1</span>];</span><br><span class="line">            array[j + <span class="number">1</span>] = array[j];</span><br><span class="line">            array[j] = temp;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(array);</span><br></pre></td></tr></table></figure></li></ol><h2 id="6-函数"><a href="#6-函数" class="headerlink" title="6.函数"></a>6.函数</h2><h4 id="1-1-声明函数"><a href="#1-1-声明函数" class="headerlink" title="1.1 声明函数"></a>1.1 声明函数</h4><ol><li><p>第一种声明</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> 函数名() &#123;</span><br><span class="line">    <span class="comment">// 函数体</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Hi&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>函数表达式声明(匿名函数)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> 变量名 = <span class="keyword">function</span>(<span class="params"></span>)&#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> fun = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;函数表达式&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1.fun 是变量名，不是函数名</span></span><br><span class="line"><span class="comment">// 2.函数表达式声明方式跟声明变量差不多，只不过变量里面存的是值，而 函数表达式里面存的是函数</span></span><br><span class="line"><span class="comment">// 3.函数表达式也可以进行传递参数</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="1-2-函数调用"><a href="#1-2-函数调用" class="headerlink" title="1.2 函数调用"></a>1.2 函数调用</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">sayHi</span>();<span class="comment">// 函数调用</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sayHi</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Hi&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-3-带参数的函数"><a href="#1-3-带参数的函数" class="headerlink" title="1.3 带参数的函数"></a>1.3 带参数的函数</h4><ol><li><p>声明带参数的函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> 函数名(形参<span class="number">1</span>,形参<span class="number">2.</span>..) &#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">cook</span>(<span class="params">aru</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(aru);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">cook</span>(<span class="string">&#x27;德华&#x27;</span>);<span class="comment">// 存放实参</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// &gt; 德华</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><blockquote><ol><li>如果实参的个数多于形参的个数，则只会取到形参的个数</li><li>如果实参的个数小于形参的个数，形参则被看做没有被定义的变量  undefined 结果为 NaN</li></ol></blockquote></blockquote></li><li><p>函数可以互相调用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    cosole.<span class="title function_">log</span>(<span class="number">11</span>);</span><br><span class="line">    <span class="title function_">fn2</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn2</span>(<span class="params"></span>) &#123;</span><br><span class="line">cosole.<span class="title function_">log</span>(<span class="number">22</span>);</span><br><span class="line">    <span class="title function_">fn1</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn1</span>();</span><br><span class="line"><span class="comment">// &gt; 会进入无限循环</span></span><br></pre></td></tr></table></figure><p>输出结果：<img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221120112556650.png" alt="image-20221120112556650" style="zoom:67%;" /></p></li></ol><h4 id="1-4-函数的返回值"><a href="#1-4-函数的返回值" class="headerlink" title="1.4 函数的返回值"></a>1.4 函数的返回值</h4><ol><li><p>返回值的注意事项：</p><blockquote><ol><li>return 具有终止性</li><li>return 只能返回一个值，可利用数组来存放返回多个值</li><li>如果没有 return 则返回 undefined</li></ol></blockquote></li><li><p>返回值格式</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> 函数名() &#123;</span><br><span class="line">    <span class="keyword">return</span> 返回的结果;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>例子</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getResult</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getResult</span>(); <span class="comment">// getResult = 666;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getResult</span>());</span><br><span class="line"><span class="comment">// &gt; 666</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">cook</span>(<span class="params">aru</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> aru;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">cook</span>(<span class="string">&#x27;德华&#x27;</span>););</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getSum</span>(<span class="params">num1,num2</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> num1 + num2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getSum</span>(<span class="number">1</span>, <span class="number">2</span>));</span><br><span class="line"><span class="comment">// &gt; 3</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="1-5-函数接受数组和返回数组"><a href="#1-5-函数接受数组和返回数组" class="headerlink" title="1.5 函数接受数组和返回数组"></a>1.5 函数接受数组和返回数组</h4><ol><li><p>求数组最大值：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getMax</span>(<span class="params">arr</span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> max = arr[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (arr[i] &gt; max)&#123;</span><br><span class="line">            max = arr[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> arrayMax = <span class="title function_">getMax</span>([<span class="number">0</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">9</span>]);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arrayMax);</span><br><span class="line"><span class="comment">// &gt; 9</span></span><br></pre></td></tr></table></figure></li><li><p>求数的加减乘除：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getResult</span>(<span class="params">num1, num2</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> [num1 + num2, num1 * num2, num1 \ num2, num1 - num2];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="title function_">getResult</span>(<span class="number">5</span>,<span class="number">4</span>));</span><br></pre></td></tr></table></figure><p>输出结果：</p><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221118214411803.png" alt="image-20221118214411803" style="zoom:67%;" /></li></ol><h4 id="1-5-arguments-的使用"><a href="#1-5-arguments-的使用" class="headerlink" title="1.5 arguments 的使用"></a>1.5 arguments 的使用</h4><blockquote><p>但我们不确定有多少个参数传递的时候，可以用 &#x3D;&#x3D;arguments&#x3D;&#x3D; 来获取。在 JavaScript 中，arguments 实际上它是当前函数的一个&#x3D;&#x3D;内置对象&#x3D;&#x3D;，所有函数都内置了一个arguments 对象，arguments 对象中&#x3D;&#x3D;存储了传递的所有实参&#x3D;&#x3D;</p></blockquote><ol><li><p>使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>.<span class="property">length</span>);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>[<span class="number">3</span>]);<span class="comment">// &gt; 4</span></span><br><span class="line">    <span class="comment">// 我们可以按照数组的方式遍历 arguments</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="variable language_">arguments</span>.<span class="property">length</span>; i++)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>);</span><br></pre></td></tr></table></figure><p>输出结果：</p><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221118221832692.png" alt="image-20221118221832692" style="zoom:67%;" /><blockquote><p>注意：</p><ol><li>伪数组，并不是真正意义上的数组</li><li>具有数组的 length 属性</li><li>按照索引的方式来进行存储的</li><li>它没有真正数组的一些方法 pop()  push() 等等</li></ol></blockquote></li></ol><h4 id="1-6-函数的案例"><a href="#1-6-函数的案例" class="headerlink" title="1.6 函数的案例"></a>1.6 函数的案例</h4><ol><li><p>利用函数封装输入年份输出2月份天数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 案例：输入年份，输出该年份的2月份有几天</span></span><br><span class="line"><span class="comment">// 返回年份天数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">backDay</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="keyword">let</span> year = <span class="title function_">prompt</span>(<span class="string">&#x27;请输入年份：&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_">isRunYear</span>(year))&#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;当前年份是闰年，2月份有29天&#x27;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_">alert</span>(<span class="string">&#x27;当前年份是平年，2月份有28天&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">backDay</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回平年闰年</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">isRunYear</span>(<span class="params">year</span>) &#123;</span><br><span class="line"><span class="keyword">let</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span> || year % <span class="number">400</span> == <span class="number">0</span>)&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="7-作用域"><a href="#7-作用域" class="headerlink" title="7.作用域"></a>7.作用域</h2><blockquote><ol><li><p>JavaScript 代码名字在某个范围起效果 提高程序的可靠性和减少命名冲突</p></li><li><p>js 作用域 (es6) 之前：分全局作用域和局部作用域</p></li><li><p>全局：整个script标签，或者是整js文件</p></li><li><p>全局变量只有浏览器关闭的时候才会销毁，比较占内存资源</p></li><li><p>局部变量，但程序执行完毕之后就会销毁，节约内存资源</p></li></ol></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>; <span class="comment">// 全局作用域</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">20</span>; <span class="comment">// 局部作用域</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-1-全局变量"><a href="#1-1-全局变量" class="headerlink" title="1.1 全局变量"></a>1.1 全局变量</h4><ol><li><p>在全局作用域下的变量，在全局都可以使用</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;这里是外部:&#x27;</span> + num);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;这里是函数内部:&#x27;</span> + num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun</span>();</span><br></pre></td></tr></table></figure><p>输出结果：<img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221120163944040.png" alt="image-20221120163944040" style="zoom:67%;" /></p></li></ol><h4 id="1-2-局部变量"><a href="#1-2-局部变量" class="headerlink" title="1.2 局部变量"></a>1.2 局部变量</h4><ol><li><p>在局部作用域下的的变量，后者在函数内部的变量就是局部变量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> num1 = <span class="number">20</span>; <span class="comment">// 此时 num1 就是局部变量</span></span><br><span class="line">    num2 = <span class="number">30</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fun</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num2); <span class="comment">//如果在函数内部，没有声明直接赋值的变量也属于全局变量</span></span><br></pre></td></tr></table></figure><p>输出结果：<img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221120164800523.png" alt="image-20221120164800523" style="zoom:67%;" /></p><blockquote><p>注意： 函数的形参也可以看做是局部变量</p></blockquote></li></ol><h4 id="1-3-块级作用域-es6-新增"><a href="#1-3-块级作用域-es6-新增" class="headerlink" title="1.3 块级作用域(es6 新增)"></a>1.3 块级作用域(es6 新增)</h4><ol><li><p>目前暂无</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="number">3</span> &lt; <span class="number">5</span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line"><span class="comment">// 是可以调用的</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="1-4-链式作用域"><a href="#1-4-链式作用域" class="headerlink" title="1.4 链式作用域"></a>1.4 链式作用域</h4><ol><li><p>作用域链</p><blockquote><p>根据在内部函数可以访问外部函数变量的机制，用链式查找决定那些数据能被内部函数访问，就称为作用域链</p></blockquote><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123; <span class="comment">// 外部函数</span></span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>) &#123; <span class="comment">// 内部函数</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 此时会链式查找，一层一层往上查找，结果为20</span></span><br></pre></td></tr></table></figure><p>查找原理：<img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221120170156732.png" alt="image-20221120170156732" style="zoom:67%;" /></p><p>输出结果：<img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221120193753035.png" alt="image-20221120193753035" style="zoom: 67%;" /></p></li></ol><h2 id="8-JavaScript-预解析"><a href="#8-JavaScript-预解析" class="headerlink" title="8.JavaScript 预解析"></a>8.JavaScript 预解析</h2><h4 id="1-1-预解析"><a href="#1-1-预解析" class="headerlink" title="1.1 预解析"></a>1.1 预解析</h4><ol><li><p>Js 引擎运行 Js 分为两步：预解析，代码执行</p><blockquote><ol><li>预解析 js 引擎会把 js 里面所有的 <strong>var</strong>  还有 <strong>function</strong> 提升到当前作用域的最前面</li><li>代码执行，按照代码书写的顺序从上往下执行</li></ol></blockquote></li><li><p>预解析分为 变量预解析 (变量提升) 和函数预解析 (函数提升)</p><blockquote><ol><li>变量提升 就是把所有的变量声明提升到当前的作用域最前面  不提升赋值操作</li><li>函数提升 就是把所有的函数声明提升到当前作用域的最前面 不调用函数</li></ol></blockquote><p>代码例子:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">// &gt; undefined</span></span><br><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 预解析后执行顺序为：</span></span><br><span class="line"><span class="keyword">var</span> num; <span class="comment">// 先定义</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">// 然后输出 因为没有赋值，所以输出结果为undefined</span></span><br><span class="line">num = <span class="number">10</span>; <span class="comment">// 再赋值</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">fun</span>();</span><br><span class="line"><span class="keyword">var</span> fun = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">22</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 预解析之后相当于执行了：</span></span><br><span class="line"><span class="keyword">var</span> fun;</span><br><span class="line"><span class="title function_">fun</span>();</span><br><span class="line">fun = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">22</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 因此函数表达式一定要先定义后调用</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="1-2-预解析案例"><a href="#1-2-预解析案例" class="headerlink" title="1.2 预解析案例"></a>1.2 预解析案例</h4><ol><li><p>案例-1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="title function_">fun</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 预解析之后：</span></span><br><span class="line"><span class="keyword">var</span> num;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fun</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> num;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line">    num = <span class="number">20</span>;</span><br><span class="line">&#125;</span><br><span class="line">num = <span class="number">10</span>;</span><br><span class="line"><span class="title function_">fun</span>();</span><br></pre></td></tr></table></figure><p>输出结果：<img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221120200139054.png" alt="image-20221120200139054" style="zoom:80%;" /></p></li><li><p>案例-2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">20</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 预解析之后：</span></span><br><span class="line"><span class="keyword">var</span> num;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> num;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">// &gt; undefined</span></span><br><span class="line">    num = <span class="number">20</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">// &gt; 20</span></span><br><span class="line">&#125;</span><br><span class="line">num = <span class="number">10</span>;</span><br><span class="line"><span class="title function_">fn</span>();</span><br></pre></td></tr></table></figure><p>输出结果：<img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221120200533098.png" alt="image-20221120200533098" style="zoom:67%;" /></p></li><li><p>案例-3</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">18</span>;</span><br><span class="line"><span class="title function_">f1</span>();</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">9</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br><span class="line">    <span class="keyword">var</span> a = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//预解析之后：</span></span><br><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> b;</span><br><span class="line">    <span class="keyword">var</span> a;</span><br><span class="line">    b = <span class="number">9</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// &gt; undefined</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b); <span class="comment">// &gt; 9</span></span><br><span class="line">    a = <span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">a = <span class="number">18</span>;</span><br><span class="line"><span class="title function_">f1</span>();</span><br></pre></td></tr></table></figure><p>输出结果：<img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221120201019434-1668946228035-1.png" alt="image-20221120201019434" style="zoom:67%;" /></p></li><li><p>案例-4</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="title function_">f1</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(c);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a = b = c = <span class="number">9</span>;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b);</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 预解析之后：</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> a;</span><br><span class="line">    a = b = c = <span class="number">9</span>;</span><br><span class="line">    <span class="comment">// 相当于 var a = 9; b = 9; c = 9; b 和 c 直接赋值 没有var 声明 当全局变量看</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// &gt; 9</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b); <span class="comment">// &gt; 9</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(c); <span class="comment">// &gt; 9</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">f1</span>();</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(c); <span class="comment">// &gt; 9</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b); <span class="comment">// &gt; 9</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a); <span class="comment">// 报错</span></span><br></pre></td></tr></table></figure><p>输出结果：<img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/image-20221120201730938.png" alt="image-20221120201730938" style="zoom:67%;" /></p></li></ol><h2 id="9-对象"><a href="#9-对象" class="headerlink" title="9.对象"></a>9.对象</h2><h4 id="1-1-什么是对象"><a href="#1-1-什么是对象" class="headerlink" title="1.1 什么是对象"></a>1.1 什么是对象</h4><blockquote><p>万物皆对象 一个具体的事务，看得见，摸得着。例如，一本书，一辆汽车，一个人</p></blockquote><ul><li>属性：事物的<strong>特征</strong>，来对象中用<strong>属性</strong>来表示(常用名词)</li><li>方法：事物的<strong>行为</strong>，在对象中用<strong>方法</strong>来表示(常用动词)</li></ul><h4 id="1-2-创建对象的三种方式"><a href="#1-2-创建对象的三种方式" class="headerlink" title="1.2 创建对象的三种方式"></a>1.2 创建对象的三种方式</h4><ol><li>在 JavaScript 中，现阶段可以采用三种方式来创建对象(object)<ul><li>利用<strong>字面量</strong>创建对象</li><li>利用 <strong>new Object</strong> 创建对象</li><li>利用<strong>构造函数</strong>创建对象</li></ul></li></ol><h5 id="1-2-1-利用字面量创建对象"><a href="#1-2-1-利用字面量创建对象" class="headerlink" title="1.2.1 利用字面量创建对象"></a>1.2.1 利用字面量创建对象</h5>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;JavaScript学习&quot;&gt;&lt;a href=&quot;#JavaScript学习&quot; class=&quot;headerlink&quot; title=&quot;JavaScript学习&quot;&gt;&lt;/a&gt;JavaScript学习&lt;/h1&gt;&lt;h2 id=&quot;1-声明变量&quot;&gt;&lt;a href=&quot;#1-声明变量&quot;</summary>
      
    
    
    
    <category term="笔记" scheme="http://example.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="JavaScript" scheme="http://example.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>我的第一篇文章</title>
    <link href="http://example.com/2022/11/21/%E6%96%B0%E6%96%87%E7%AB%A0/"/>
    <id>http://example.com/2022/11/21/%E6%96%B0%E6%96%87%E7%AB%A0/</id>
    <published>2022-11-21T09:05:00.000Z</published>
    <updated>2022-11-22T16:02:31.260Z</updated>
    
    <content type="html"><![CDATA[<h1 id="我的第一篇博客文章"><a href="#我的第一篇博客文章" class="headerlink" title="我的第一篇博客文章"></a>我的第一篇博客文章</h1><p>​经历了一遍又一遍的搭建，重装，解决报错，本博客终于在 2022年11月21日上线于 <strong>GitHub</strong> ，此博客也将进行更好的修改和美化（当然这是在我技术成熟的情况下，目前我只是个小白）。</p><hr><p>–end–</p><p><img src="https://typora-xjw.oss-cn-chengdu.aliyuncs.com/img/MAO-1669024812136-2.png" alt="MAO"></p>]]></content>
    
    
    <summary type="html">这是第一篇文章，为我的博客搭建成功而测试</summary>
    
    
    
    
  </entry>
  
</feed>
